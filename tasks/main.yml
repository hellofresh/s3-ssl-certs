---

  - name: acquire certificate bundle from s3
    become: false
    connection: local
    s3:
      region: "{{ s3_ssl_certs_region }}"
      bucket: "{{ s3_ssl_certs_bucket }}"
      aws_access_key: "{{ s3_ssl_certs_accesskey }}"
      aws_secret_key: "{{ s3_ssl_certs_secretkey }}"
      object: "{{ s3_ssl_certs_certbundle }}"
      dest: "{{ s3_ssl_certs_tmpdir }}/{{ s3_ssl_certs_certbundle }}"
      mode: "get"
      overwrite: yes
    changed_when: false

  - name: load certificate data
    become: false
    connection: local
    include_vars:
      file: "{{ s3_ssl_certs_tmpdir }}/{{ s3_ssl_certs_certbundle }}"
      name: certificate

  # - name: remove certficate data from local machine
  #   become: false
  #   connection: local
  #   file:
  #     name: "{{ s3_ssl_certs_tmpdir }}/{{ s3_ssl_certs_certbundle }}"
  #     state: absent
  #   changed_when: false
  #   failed_when: false
  #   # Do not fail because we could already remove that certificate from local host

  - name: check if yml has good common name
    fail:
      msg: "CN is not defined in {{ s3_ssl_certs_certbundle }}"
    when: certificate.cn is not defined

  - name: check if yml has certificate
    fail:
      msg: "Certificate is not defined in {{ s3_ssl_certs_certbundle }}"
    when: certificate.certificate is not defined

  - name: check if yml has private key
    fail:
      msg: "Private key is not defined in {{ s3_ssl_certs_certbundle }}"
    when: certificate.private_key is not defined

  - name: install certificate
    copy:
      content: "{{ certificate.certificate }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ certificate.cn }}.crt"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0644"

  - name: install private key
    copy:
      content: "{{ certificate.private_key }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ certificate.cn }}.key"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0600"

  - name: install chain
    copy:
      content: "{{ certificate.chain }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ certificate.cn }}.chain"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0644"
    when: certificate.chain is defined

  - name: install full chain
    copy:
      content: "{{ certificate.full_chain }}"
      dest: "{{ s3_ssl_certs_outputdir }}/{{ certificate.cn }}.full_chain"
      owner: "{{ s3_ssl_certs_owner }}"
      group: "{{ s3_ssl_certs_group }}"
      mode: "0644"
    when: certificate.full_chain is defined
